chosen_values <- values[[min(template_idx, length(values))]]
# Construir el texto completo del problema
paste0(
sprintf(intro, data$n_total),
"\n\n",
sprintf(format_ind, data$n_A, A, data$n_B, B, data$n_C, C),
"\n\nAdemás sabemos que \n\n",
sprintf(format_inters, chosen_values[1], A, B, chosen_values[2], A, C, chosen_values[3], B, C)
)
}
# Generar datos válidos con manejo de errores robusto
tryCatch({
data <- generate_valid_data()
# Verificar la consistencia matemática de los datos
# Esta comprobación doble asegura que no haya errores en los cálculos
sum_all_regions <- with(data, n_only_A + n_only_B + n_only_C +
n_AB_only + n_AC_only + n_BC_only + n_all + n_none)
if (abs(sum_all_regions - data$n_total) > 0.01) {
stop("Error de consistencia: La suma de las regiones no coincide con el total")
}
}, error = function(e) {
# En caso de error, intentar con parámetros alternativos o usar valores predefinidos
warning(paste("Error en la generación de datos:", e$message,
"- Usando datos de respaldo"))
# Datos de respaldo predefinidos que sabemos que son válidos
data <<- list(
n_total = 40, n_A = 18, n_B = 16, n_C = 20,
n_AB = 6, n_AC = 8, n_BC = 5, n_all = 3,
n_only_A = 7, n_only_B = 8, n_only_C = 10,
n_AB_only = 3, n_AC_only = 5, n_BC_only = 2,
n_none = 5
)
})
# Extraer valores a variables individuales para facilitar su uso
for (name in names(data)) {
assign(name, data[[name]])
}
# Generar géneros musicales aleatorios
genres <- generate_random_genres()
A <- genres[1]
B <- genres[2]
C <- genres[3]
# Generar el texto del problema
random_text <- generate_random_text(data, A, B, C)
#' Crea una lista de preguntas y sus respuestas relacionadas con el diagrama de Venn
#'
#' @param A Primer género musical
#' @param B Segundo género musical
#' @param C Tercer género musical
#' @param data Lista con los datos del diagrama de Venn
#' @return Lista con dos elementos: questions (preguntas) y answers (respuestas)
create_questions_and_answers <- function(A, B, C, data) {
# Extraer datos para facilitar el acceso
with(data, {
# Lista ampliada de preguntas con variaciones en la redacción
questions <- c(
# Preguntas sobre intersecciones dobles exclusivas
sprintf("¿Cuántas personas escuchan solamente %s y %s?", A, B),
sprintf("¿Cuántos adolescentes disfrutan únicamente de %s y %s?", A, C),
sprintf("¿Cuál es el número de entrevistados que solo escuchan %s y %s?", B, C),
# Preguntas sobre la intersección triple
"¿Cuántas personas escuchan los tres géneros musicales?",
"¿Cuántos estudiantes disfrutan simultáneamente de los tres géneros?",
# Preguntas sobre el complemento
"¿Cuántos adolescentes no escuchan ninguno de estos géneros musicales?",
"¿Cuál es el número de estudiantes que no disfrutan de ninguno de estos géneros?",
# Preguntas sobre uniones e intersecciones especiales
"¿Cuál es el total de personas que escuchan solo uno de estos géneros musicales?",
"¿Cuántos entrevistados disfrutan de al menos dos géneros musicales?",
"¿Cuántas personas escuchan exactamente dos géneros musicales?",
# Preguntas sobre diferencias simétricas
sprintf("¿Cuál es el número de adolescentes que escuchan %s o %s, pero no ambos?", A, B),
sprintf("¿Cuántos estudiantes disfrutan de %s o %s, pero no de ambos géneros?", A, C),
sprintf("¿Cuántas personas escuchan %s o %s, pero no los dos a la vez?", B, C),
# Preguntas sobre diferencias
sprintf("¿Cuántos jóvenes escuchan %s pero no %s?", A, B),
sprintf("¿Cuál es el número de estudiantes que disfrutan de %s pero no de %s?", A, C),
sprintf("¿Cuántas personas escuchan %s pero no %s?", B, C),
# Preguntas sobre uniones
sprintf("¿Cuántas personas disfrutan de %s o %s, o ambos?", A, C),
sprintf("¿Cuál es el total de adolescentes que escuchan %s o %s o los dos?", A, B),
sprintf("¿Cuántos estudiantes disfrutan de %s o %s o de ambos géneros?", B, C),
# Preguntas sobre complementos de uniones
sprintf("¿Cuál es el número de entrevistados que no escuchan %s ni %s?", B, C),
sprintf("¿Cuántos estudiantes no disfrutan ni de %s ni de %s?", A, B),
sprintf("¿Cuántas personas no escuchan ni %s ni %s?", A, C),
# Preguntas sobre al menos uno, exactamente uno, máximo dos, etc.
"¿Cuántos adolescentes escuchan al menos uno de estos géneros musicales?",
"¿Cuántas personas escuchan exactamente un género musical?",
"¿Cuál es el total de personas que escuchan máximo dos géneros musicales?",
"¿Cuántos estudiantes escuchan como mucho dos de estos géneros musicales?",
"¿Cuántas personas escuchan al menos dos de estos géneros musicales?",
"¿Cuál es el total de estudiantes que escuchan máximo tres géneros musicales?",
"¿Cuántos adolescentes escuchan uno o más de estos géneros musicales?"
)
# Respuestas correspondientes a las preguntas (en el mismo orden)
answers <- c(
# Intersecciones dobles exclusivas
n_AB_only,
n_AC_only,
n_BC_only,
# Intersección triple
n_all,
n_all,
# Complemento
n_none,
n_none,
# Uniones e intersecciones especiales
n_only_A + n_only_B + n_only_C,
n_AB_only + n_AC_only + n_BC_only + n_all,
n_AB_only + n_AC_only + n_BC_only,
# Diferencias simétricas
n_only_A + n_only_B,
n_only_A + n_only_C,
n_only_B + n_only_C,
# Diferencias
n_only_A + n_AC_only,
n_only_A + n_AB_only,
n_only_B + n_AB_only,
# Uniones
n_A + n_C - n_AC,
n_A + n_B - n_AB,
n_B + n_C - n_BC,
# Complementos de uniones
n_total - (n_B + n_C - n_BC),
n_total - (n_A + n_B - n_AB),
n_total - (n_A + n_C - n_AC),
# Al menos uno, exactamente uno, máximo dos, etc.
n_total - n_none,
n_only_A + n_only_B + n_only_C,
n_only_A + n_only_B + n_only_C + n_AB_only + n_AC_only + n_BC_only,
n_only_A + n_only_B + n_only_C + n_AB_only + n_AC_only + n_BC_only,
n_AB_only + n_AC_only + n_BC_only + n_all,
n_total,
n_total - n_none
)
list(questions = questions, answers = answers)
})
}
# Generar preguntas y respuestas
qa_data <- create_questions_and_answers(A, B, C, data)
questions <- qa_data$questions
answers <- qa_data$answers
# Seleccionar 4 preguntas aleatorias para mayor variabilidad
# Usamos una semilla diferente para no repetir las mismas preguntas siempre
set.seed(as.integer(Sys.time()) %% 10000)
question_indices <- sample(1:length(questions), 4)
selected_questions <- questions[question_indices]
selected_answers <- answers[question_indices]
# Usar el mismo tipo de gráfico (pdf, svg, png) que la llamada actual de xweave()
typ <- match_exams_device()
# Generar un diagrama de Venn más atractivo y claro utilizando TikZ
tikz_venn <- sprintf('
\\begin{tikzpicture}[scale=0.8]
% Utilizamos colores más modernos con mejor contraste y transparencia
\\begin{scope}[opacity=0.6]
\\fill[red!70!blue]   ( 90:1.5) circle (2);
\\fill[green!70!blue] (210:1.5) circle (2);
\\fill[blue!80]       (330:1.5) circle (2);
\\end{scope}
% Etiquetas de los conjuntos con mejor posicionamiento
\\node[font=\\bfseries] at ( 90:3.5) {%s};
\\node[font=\\bfseries] at (210:3.5) {%s};
\\node[font=\\bfseries] at (330:3.5) {%s};
% Números en cada región con fondo blanco para mejor legibilidad
\\node[fill=white, rounded corners=2pt, inner sep=1pt] at ( 90:1.3) {\\textbf{%d}};
\\node[fill=white, rounded corners=2pt, inner sep=1pt] at (210:1.3) {\\textbf{%d}};
\\node[fill=white, rounded corners=2pt, inner sep=1pt] at (330:1.3) {\\textbf{%d}};
% Intersecciones dobles
\\node[fill=white, rounded corners=2pt, inner sep=1pt] at ( 30:1.7) {\\textbf{%d}};
\\node[fill=white, rounded corners=2pt, inner sep=1pt] at (150:1.7) {\\textbf{%d}};
\\node[fill=white, rounded corners=2pt, inner sep=1pt] at (270:1.7) {\\textbf{%d}};
% Centro (intersección triple)
\\node[fill=white, rounded corners=2pt, inner sep=2pt] at (0:0) {\\textbf{%d}};
% Región externa (ninguno)
\\node[font=\\bfseries] at (270:4.0) {Ninguno: %d};
% Añadir un título
\\node[font=\\bfseries, align=center] at (0,-4.5) {Diagrama de Venn: Preferencias de Géneros Musicales};
\\end{tikzpicture}
', A, B, C, n_only_A, n_only_B, n_only_C, n_AC_only, n_AB_only, n_BC_only, n_all, n_none)
# Configuración inicial para todos los chunks de código
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
# Cargar librerías necesarias
library(exams)
library(knitr)
library(dplyr, warn.conflicts = FALSE)
#' Genera datos válidos para un diagrama de Venn de tres conjuntos
#'
#' Esta función genera números aleatorios para las diferentes regiones
#' de un diagrama de Venn de tres conjuntos, asegurándose de que todos
#' los valores sean matemáticamente consistentes y no negativos.
#'
#' @param max_attempts Número máximo de intentos para generar datos válidos
#' @return Una lista con todos los valores necesarios para el diagrama de Venn
generate_valid_data <- function(max_attempts = 1000) {
set.seed(NULL) # Asegurar aleatoriedad en cada ejecución
for (attempt in 1:max_attempts) {
# Generar números aleatorios para el total y los conjuntos principales
# Ajustamos los rangos para mayor variabilidad manteniendo coherencia
n_total <- sample(35:60, 1)
# Porcentajes aproximados para cada género (30-50% de la población)
n_A <- round(n_total * runif(1, 0.3, 0.5))
n_B <- round(n_total * runif(1, 0.3, 0.5))
n_C <- round(n_total * runif(1, 0.3, 0.5))
# Intersecciones dobles (10-25% de la unión de cada par)
max_ab <- min(n_A, n_B)
max_ac <- min(n_A, n_C)
max_bc <- min(n_B, n_C)
# Generamos porcentajes realistas para las intersecciones
n_AB <- round(max_ab * runif(1, 0.1, 0.25))
n_AC <- round(max_ac * runif(1, 0.1, 0.25))
n_BC <- round(max_bc * runif(1, 0.1, 0.25))
# La intersección triple (entre 1 y el 40% de la menor intersección doble)
min_double_intersection <- min(n_AB, n_AC, n_BC)
n_all <- sample(1:max(1, round(min_double_intersection * 0.4)), 1)
# Calcular valores específicos para cada región exclusiva
n_only_A <- n_A - n_AB - n_AC + n_all
n_only_B <- n_B - n_AB - n_BC + n_all
n_only_C <- n_C - n_AC - n_BC + n_all
n_AB_only <- n_AB - n_all
n_AC_only <- n_AC - n_all
n_BC_only <- n_BC - n_all
# Calcular el número de personas que no escuchan ninguno
n_none <- n_total - (n_A + n_B + n_C - n_AB - n_AC - n_BC + n_all)
# Verificar que todos los valores sean no negativos y que tengan sentido
all_values <- c(n_only_A, n_only_B, n_only_C, n_AB_only, n_AC_only, n_BC_only, n_all, n_none)
if (all(all_values >= 0) &&
n_none <= n_total * 0.4 && # No más del 40% sin ningún género
n_all >= 1) {              # Al menos uno escucha los tres géneros
# Verificación adicional de consistencia matemática
sum_check <- n_only_A + n_only_B + n_only_C + n_AB_only + n_AC_only + n_BC_only + n_all + n_none
if (abs(sum_check - n_total) < 0.01) { # Tolerancia para errores de redondeo
# Devolver los valores generados en una lista estructurada
return(list(
# Totales principales
n_total = n_total,
# Conjuntos individuales
n_A = n_A, n_B = n_B, n_C = n_C,
# Intersecciones dobles (incluye la triple)
n_AB = n_AB, n_AC = n_AC, n_BC = n_BC,
# Intersección triple
n_all = n_all,
# Regiones exclusivas de cada conjunto
n_only_A = n_only_A, n_only_B = n_only_B, n_only_C = n_only_C,
# Intersecciones dobles exclusivas (sin la triple)
n_AB_only = n_AB_only, n_AC_only = n_AC_only, n_BC_only = n_BC_only,
# Complemento de la unión
n_none = n_none
))
}
}
}
stop("No se pudieron generar datos válidos después de ", max_attempts, " intentos")
}
#' Genera una lista de géneros musicales relevantes y actualizados
#'
#' @return Vector con 3 géneros musicales seleccionados aleatoriamente
generate_random_genres <- function() {
# Lista ampliada y actualizada de géneros musicales populares entre adolescentes
genres <- c(
# Géneros latinos
"Vallenato", "Salsa", "Merengue", "Reggaeton", "Bachata", "Cumbia",
# Géneros urbanos/contemporáneos
"Rap", "Hip Hop", "Trap", "R&B", "Reguetón",
# Géneros electrónicos
"Electrónica", "EDM", "House", "Techno",
# Géneros pop/rock
"Pop", "Rock", "Pop Rock", "Indie", "K-pop",
# Géneros alternativos
"Rock Alternativo", "Metal", "Jazz", "Blues", "Funk"
)
# Seleccionar 3 géneros únicos
sample(genres, 3)
}
#' Genera el texto del problema con variaciones aleatorias
#'
#' @param data Lista con los datos del diagrama de Venn
#' @param A Primer género musical
#' @param B Segundo género musical
#' @param C Tercer género musical
#' @return Texto formateado del problema
generate_random_text <- function(data, A, B, C) {
# Diferentes formas de introducir el problema
intros <- c(
"Se ha entrevistado a %d adolescentes sobre los géneros musicales que escuchan.",
"En una encuesta realizada a %d jóvenes sobre sus preferencias musicales, se obtuvieron los siguientes datos:",
"Un estudio sobre los gustos musicales de %d estudiantes de secundaria reveló lo siguiente:",
"Una plataforma de streaming musical analizó las preferencias de %d adolescentes con estos resultados:"
)
# Diferentes formas de presentar los datos de cada género
format_individual <- c(
"- %d de ellos escuchan %s, \n- %d escuchan %s, y \n- %d %s.",
"- %d personas disfrutan de %s, \n- %d prefieren %s, y \n- %d escuchan %s.",
"- %d estudiantes seleccionaron %s, \n- %d eligieron %s, y \n- %d optaron por %s."
)
# Diferentes formas de presentar las intersecciones
format_intersections <- c(
"- %d de ellos escuchan %s y %s,\n- %d escuchan %s y %s, y\n- %d %s y %s.",
"- %d de ellos escuchan solamente %s y %s,\n- %d escuchan %s y %s, y\n- %d %s y %s.",
"- %d de ellos escuchan %s y %s,\n- %d solo escuchan %s y %s, y\n- %d %s y %s.",
"- %d de ellos escuchan %s y %s,\n- %d escuchan %s y %s, y\n- %d solamente %s y %s.",
"- %d disfrutan tanto de %s como de %s,\n- %d escuchan %s y %s, y\n- %d prefieren %s y %s."
)
# Seleccionar aleatoriamente las plantillas
intro <- sample(intros, 1)
format_ind <- sample(format_individual, 1)
format_inters <- sample(format_intersections, 1)
# Determinar qué valores usar según la plantilla seleccionada
template_idx <- which(format_intersections == format_inters)
values <- list(
c(data$n_AB, data$n_AC, data$n_BC),                 # Todas las intersecciones dobles
c(data$n_AB_only, data$n_AC, data$n_BC),            # AB exclusivo
c(data$n_AB, data$n_AC_only, data$n_BC),            # AC exclusivo
c(data$n_AB, data$n_AC, data$n_BC_only),            # BC exclusivo
c(data$n_AB, data$n_AC, data$n_BC)                  # Variante adicional
)
chosen_values <- values[[min(template_idx, length(values))]]
# Construir el texto completo del problema
paste0(
sprintf(intro, data$n_total),
"\n\n",
sprintf(format_ind, data$n_A, A, data$n_B, B, data$n_C, C),
"\n\nAdemás sabemos que \n\n",
sprintf(format_inters, chosen_values[1], A, B, chosen_values[2], A, C, chosen_values[3], B, C)
)
}
# Generar datos válidos con manejo de errores robusto
tryCatch({
data <- generate_valid_data()
# Verificar la consistencia matemática de los datos
# Esta comprobación doble asegura que no haya errores en los cálculos
sum_all_regions <- with(data, n_only_A + n_only_B + n_only_C +
n_AB_only + n_AC_only + n_BC_only + n_all + n_none)
if (abs(sum_all_regions - data$n_total) > 0.01) {
stop("Error de consistencia: La suma de las regiones no coincide con el total")
}
}, error = function(e) {
# En caso de error, intentar con parámetros alternativos o usar valores predefinidos
warning(paste("Error en la generación de datos:", e$message,
"- Usando datos de respaldo"))
# Datos de respaldo predefinidos que sabemos que son válidos
data <<- list(
n_total = 40, n_A = 18, n_B = 16, n_C = 20,
n_AB = 6, n_AC = 8, n_BC = 5, n_all = 3,
n_only_A = 7, n_only_B = 8, n_only_C = 10,
n_AB_only = 3, n_AC_only = 5, n_BC_only = 2,
n_none = 5
)
})
# Extraer valores a variables individuales para facilitar su uso
for (name in names(data)) {
assign(name, data[[name]])
}
# Generar géneros musicales aleatorios
genres <- generate_random_genres()
A <- genres[1]
B <- genres[2]
C <- genres[3]
# Generar el texto del problema
random_text <- generate_random_text(data, A, B, C)
#' Crea una lista de preguntas y sus respuestas relacionadas con el diagrama de Venn
#'
#' @param A Primer género musical
#' @param B Segundo género musical
#' @param C Tercer género musical
#' @param data Lista con los datos del diagrama de Venn
#' @return Lista con dos elementos: questions (preguntas) y answers (respuestas)
create_questions_and_answers <- function(A, B, C, data) {
# Extraer datos para facilitar el acceso
with(data, {
# Lista ampliada de preguntas con variaciones en la redacción
questions <- c(
# Preguntas sobre intersecciones dobles exclusivas
sprintf("¿Cuántas personas escuchan solamente %s y %s?", A, B),
sprintf("¿Cuántos adolescentes disfrutan únicamente de %s y %s?", A, C),
sprintf("¿Cuál es el número de entrevistados que solo escuchan %s y %s?", B, C),
# Preguntas sobre la intersección triple
"¿Cuántas personas escuchan los tres géneros musicales?",
"¿Cuántos estudiantes disfrutan simultáneamente de los tres géneros?",
# Preguntas sobre el complemento
"¿Cuántos adolescentes no escuchan ninguno de estos géneros musicales?",
"¿Cuál es el número de estudiantes que no disfrutan de ninguno de estos géneros?",
# Preguntas sobre uniones e intersecciones especiales
"¿Cuál es el total de personas que escuchan solo uno de estos géneros musicales?",
"¿Cuántos entrevistados disfrutan de al menos dos géneros musicales?",
"¿Cuántas personas escuchan exactamente dos géneros musicales?",
# Preguntas sobre diferencias simétricas
sprintf("¿Cuál es el número de adolescentes que escuchan %s o %s, pero no ambos?", A, B),
sprintf("¿Cuántos estudiantes disfrutan de %s o %s, pero no de ambos géneros?", A, C),
sprintf("¿Cuántas personas escuchan %s o %s, pero no los dos a la vez?", B, C),
# Preguntas sobre diferencias
sprintf("¿Cuántos jóvenes escuchan %s pero no %s?", A, B),
sprintf("¿Cuál es el número de estudiantes que disfrutan de %s pero no de %s?", A, C),
sprintf("¿Cuántas personas escuchan %s pero no %s?", B, C),
# Preguntas sobre uniones
sprintf("¿Cuántas personas disfrutan de %s o %s, o ambos?", A, C),
sprintf("¿Cuál es el total de adolescentes que escuchan %s o %s o los dos?", A, B),
sprintf("¿Cuántos estudiantes disfrutan de %s o %s o de ambos géneros?", B, C),
# Preguntas sobre complementos de uniones
sprintf("¿Cuál es el número de entrevistados que no escuchan %s ni %s?", B, C),
sprintf("¿Cuántos estudiantes no disfrutan ni de %s ni de %s?", A, B),
sprintf("¿Cuántas personas no escuchan ni %s ni %s?", A, C),
# Preguntas sobre al menos uno, exactamente uno, máximo dos, etc.
"¿Cuántos adolescentes escuchan al menos uno de estos géneros musicales?",
"¿Cuántas personas escuchan exactamente un género musical?",
"¿Cuál es el total de personas que escuchan máximo dos géneros musicales?",
"¿Cuántos estudiantes escuchan como mucho dos de estos géneros musicales?",
"¿Cuántas personas escuchan al menos dos de estos géneros musicales?",
"¿Cuál es el total de estudiantes que escuchan máximo tres géneros musicales?",
"¿Cuántos adolescentes escuchan uno o más de estos géneros musicales?"
)
# Respuestas correspondientes a las preguntas (en el mismo orden)
answers <- c(
# Intersecciones dobles exclusivas
n_AB_only,
n_AC_only,
n_BC_only,
# Intersección triple
n_all,
n_all,
# Complemento
n_none,
n_none,
# Uniones e intersecciones especiales
n_only_A + n_only_B + n_only_C,
n_AB_only + n_AC_only + n_BC_only + n_all,
n_AB_only + n_AC_only + n_BC_only,
# Diferencias simétricas
n_only_A + n_only_B,
n_only_A + n_only_C,
n_only_B + n_only_C,
# Diferencias
n_only_A + n_AC_only,
n_only_A + n_AB_only,
n_only_B + n_AB_only,
# Uniones
n_A + n_C - n_AC,
n_A + n_B - n_AB,
n_B + n_C - n_BC,
# Complementos de uniones
n_total - (n_B + n_C - n_BC),
n_total - (n_A + n_B - n_AB),
n_total - (n_A + n_C - n_AC),
# Al menos uno, exactamente uno, máximo dos, etc.
n_total - n_none,
n_only_A + n_only_B + n_only_C,
n_only_A + n_only_B + n_only_C + n_AB_only + n_AC_only + n_BC_only,
n_only_A + n_only_B + n_only_C + n_AB_only + n_AC_only + n_BC_only,
n_AB_only + n_AC_only + n_BC_only + n_all,
n_total,
n_total - n_none
)
list(questions = questions, answers = answers)
})
}
# Generar preguntas y respuestas
qa_data <- create_questions_and_answers(A, B, C, data)
questions <- qa_data$questions
answers <- qa_data$answers
# Seleccionar 4 preguntas aleatorias para mayor variabilidad
# Usamos una semilla diferente para no repetir las mismas preguntas siempre
set.seed(as.integer(Sys.time()) %% 10000)
question_indices <- sample(1:length(questions), 4)
selected_questions <- questions[question_indices]
selected_answers <- answers[question_indices]
# Usar el mismo tipo de gráfico (pdf, svg, png) que la llamada actual de xweave()
typ <- match_exams_device()
# Generar un diagrama de Venn más atractivo y claro utilizando TikZ
tikz_venn <- sprintf('
\\begin{tikzpicture}[scale=0.8]
%% Utilizamos colores más modernos con mejor contraste y transparencia
\\begin{scope}[opacity=0.6]
\\fill[red!70!blue]   ( 90:1.5) circle (2);
\\fill[green!70!blue] (210:1.5) circle (2);
\\fill[blue!80]       (330:1.5) circle (2);
\\end{scope}
%% Etiquetas de los conjuntos con mejor posicionamiento
\\node[font=\\bfseries] at ( 90:3.5) {%s};
\\node[font=\\bfseries] at (210:3.5) {%s};
\\node[font=\\bfseries] at (330:3.5) {%s};
%% Números en cada región con fondo blanco para mejor legibilidad
\\node[fill=white, rounded corners=2pt, inner sep=1pt] at ( 90:1.3) {\\textbf{%d}};
\\node[fill=white, rounded corners=2pt, inner sep=1pt] at (210:1.3) {\\textbf{%d}};
\\node[fill=white, rounded corners=2pt, inner sep=1pt] at (330:1.3) {\\textbf{%d}};
%% Intersecciones dobles
\\node[fill=white, rounded corners=2pt, inner sep=1pt] at ( 30:1.7) {\\textbf{%d}};
\\node[fill=white, rounded corners=2pt, inner sep=1pt] at (150:1.7) {\\textbf{%d}};
\\node[fill=white, rounded corners=2pt, inner sep=1pt] at (270:1.7) {\\textbf{%d}};
%% Centro (intersección triple)
\\node[fill=white, rounded corners=2pt, inner sep=2pt] at (0:0) {\\textbf{%d}};
%% Región externa (ninguno)
\\node[font=\\bfseries] at (270:4.0) {Ninguno: %d};
%% Añadir un título
\\node[font=\\bfseries, align=center] at (0,-4.5) {Diagrama de Venn: Preferencias de Géneros Musicales};
\\end{tikzpicture}
', A, B, C, n_only_A, n_only_B, n_only_C, n_AC_only, n_AB_only, n_BC_only, n_all, n_none)
# Configuración de knitr para TikZ
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
#' Función para incluir el diagrama TikZ con mejoras visuales
include_venn <- function() {
include_tikz(tikz_venn, name = "venn_diagram", markup = "markdown",
format = typ,
library = c("shapes", "backgrounds", "positioning", "fit"),
packages = c("tikz", "xcolor"),
width = "7cm")
}
# Mostramos el diagrama en el enunciado solo en algunos casos (30% de probabilidad)
# para agregar variedad a los ejercicios
include_venn()
include_venn()
source("~/Insync/alvaroangelm@iepedacitodecielo.edu.co/Google Drive/RepositorioMatematicasICFES_R_Exams/06-Estadística-Y-Probabilidad/Pensamiento-Aleatorio/07-Probabilidad_Principios-Aditivo-Multiplicativo-Conteo/Diagramas de Venn/GénerosMusicales/SemilleroUnico2.R")
source("~/Insync/alvaroangelm@iepedacitodecielo.edu.co/Google Drive/RepositorioMatematicasICFES_R_Exams/06-Estadística-Y-Probabilidad/Pensamiento-Aleatorio/07-Probabilidad_Principios-Aditivo-Multiplicativo-Conteo/Diagramas de Venn/GénerosMusicales/SemilleroUnico2.R")
