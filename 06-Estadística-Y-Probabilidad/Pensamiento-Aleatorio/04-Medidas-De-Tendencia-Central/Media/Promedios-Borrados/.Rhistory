setwd("~/Escritorio/Promedios/p25_SAI_CFA11S123")
Meta-information
library(exams)
# Para salidas exams2pdf:
#   print(xtable(data, align = c('l', 'l', 'c')), type = 'latex', include.rownames = FALSE)
# Para salidas exams2moodle:
#   print(xtable(data, align = c('l', 'l', 'c')), type = 'html', include.rownames = FALSE)
marcela <- sample(c("David", "Patricia", "Valentina", "Andrés", "Gabriela", "Leonardo", "Daniela", "Felipe", "Isabella", "Paula Andrea", "Natalia", "Lina María", "Consuelo", "Carlos Eduardo", "Samuel", "Luis Fernando"), 1)
# Definir un vector con nombres de estudiantes
num_students <- sample(5:10, 1)
est_con <- num_students-2
nombres_s <- sample(c("Alberto", "Juan", "Alejandra", "Camila", "Sebastián", "Lucía", "Miguel", "Sofía", "Diego", "Carla", "María Antonia", "Violeta", "Martha Lucía", "Manuel Evelio", "Álvaro", "José Álvaro"), num_students)
##############################################
pepe <- 0
while(pepe == 0) {
nombres_c <- nombres_s[3:length(nombres_s)]
# Definir edades aleatorias para los estudiantes (entre 25 y 55)
edades_al <- sample(25:55, num_students - 2)
tote <- paste(nombres_c, "(", edades_al, ")", sep="")
totem <- paste(edades_al, collapse=" + ")
# Calcular la edad promedio
promedio <- round((sum(edades_al) + 2 * sample(25:55, 1)) / num_students)
# Calcular la suma de las edades conocidas
suma_conocida <- sum(edades_al)
# La suma de las edades de los otros 2 estudiantes es la diferencia entre la suma total y la suma conocida
suma_total <- num_students * promedio
suma_resto <- suma_total - suma_conocida
if(suma_resto %% 2 == 0) {
pepe <- pepe + 1
} else {
pepe <- 0
}
}
#######################
# La edad individual de los otros 2 estudiantes (que es la misma para ambos)
edad_resto <- round(suma_resto / 2)
# Asegurarse de que edad_resto sea mayor o igual a 4
while(edad_resto < 4) {
edades_al <- sample(25:55, num_students - 2)
promedio <- round((sum(edades_al) + 2 * sample(25:55, 1)) / num_students)
suma_conocida <- sum(edades_al)
suma_total <- num_students * promedio
suma_resto <- suma_total - suma_conocida
edad_resto <- round(suma_resto / 2)
}
sol <- c(edad_resto)
library(xtable)
# Suponiendo que tienes dos vectores en R: nombres_s y edades_al
data <- data.frame(
Estudiante = nombres_s,
Edad = c(rep("##ANSWER1##", 2), edades_al)
)
# Imprimir sin nombres de filas y comentario
print(xtable(data, align = c('l', 'l', 'c')), type = 'html', include.rownames = FALSE, comment = FALSE)
answerlist(rep("", length(sol)), markup = "markdown")
source("~/Escritorio/Promedios/p25_SAI_CFA11S123/SemilleroUnico2.R")
source("~/Escritorio/Promedios/p25_SAI_CFA11S123/SemilleroUnico2.R")
source("~/Escritorio/Promedios/p25_SAI_CFA11S123/SemilleroUnico2.R")
library(exams)
library(knitr)  # Cargar knitr
library(rmarkdown)  # Cargar rmarkdown
# Configurar el formato de salida
output_format <- if(opts.current$knitr$opts_list$pdf) "latex" else "html"
library(exams)
# Para salidas exams2pdf:
#   print(xtable(data, align = c('l', 'l', 'c')), type = 'latex', include.rownames = FALSE)
# Para salidas exams2moodle:
#   print(xtable(data, align = c('l', 'l', 'c')), type = 'html', include.rownames = FALSE)
marcela <- sample(c("David", "Patricia", "Valentina", "Andrés", "Gabriela", "Leonardo", "Daniela", "Felipe", "Isabella", "Paula Andrea", "Natalia", "Lina María", "Consuelo", "Carlos Eduardo", "Samuel", "Luis Fernando"), 1)
# Definir un vector con nombres de estudiantes
num_students <- sample(5:20, 1)
est_con <- num_students-2
nombres_s <- sample(c(
"Alberto", "Juan", "Alejandra", "Camila", "Sebastián", "Lucía", "Miguel", "Sofía", "Diego", "Carla",
"María Antonia", "Violeta", "Martha Lucía", "Manuel Evelio", "Álvaro", "José Álvaro", "Santiago", "Elena",
"Juliana", "Ricardo", "Andrea", "Cristian", "Daniel", "Valeria", "Martín", "Luciana", "Gabriel", "María José",
"Nicolás", "Daniela", "Pedro", "Luisa", "Antonio", "Sara", "Fernanda", "Mariana", "Jorge", "Gonzalo",
"Catalina", "Agustín", "Valentín", "Renata", "Lucas", "Eugenia", "Bautista", "Micaela", "Matías", "Adriana"
), num_students)
##############################################
pepe <- 0
while(pepe == 0) {
nombres_c <- nombres_s[3:length(nombres_s)]
# Definir edades aleatorias para los estudiantes (entre 25 y 55)
edades_al <- sample(25:55, num_students - 2)
tote <- paste(nombres_c, "(", edades_al, ")", sep="")
totem <- paste(edades_al, collapse=" + ")
# Calcular la edad promedio
promedio <- round((sum(edades_al) + 2 * sample(25:55, 1)) / num_students)
# Calcular la suma de las edades conocidas
suma_conocida <- sum(edades_al)
# La suma de las edades de los otros 2 estudiantes es la diferencia entre la suma total y la suma conocida
suma_total <- num_students * promedio
suma_resto <- suma_total - suma_conocida
if(suma_resto %% 2 == 0) {
pepe <- pepe + 1
} else {
pepe <- 0
}
}
#######################
# La edad individual de los otros 2 estudiantes (que es la misma para ambos)
edad_resto <- round(suma_resto / 2)
# Asegurarse de que edad_resto sea mayor o igual a 4
while(edad_resto < 4) {
edades_al <- sample(25:55, num_students - 2)
promedio <- round((sum(edades_al) + 2 * sample(25:55, 1)) / num_students)
suma_conocida <- sum(edades_al)
suma_total <- num_students * promedio
suma_resto <- suma_total - suma_conocida
edad_resto <- round(suma_resto / 2)
}
sol <- c(edad_resto)
library(xtable)
# Suponiendo que tienes dos vectores en R: nombres_s y edades_al
data <- data.frame(
Estudiante = nombres_s,
Edad = c(rep("##ANSWER1##", 2), edades_al)
)
# Imprimir sin nombres de filas y comentario
print(xtable(data, align = c('l', 'l', 'c')), type = 'latex', include.rownames = FALSE, comment = FALSE)
answerlist(rep("", length(sol)), markup = "markdown")
library(exams)
# Para salidas exams2pdf:
#   print(xtable(data, align = c('l', 'l', 'c')), type = 'latex', include.rownames = FALSE)
# Para salidas exams2moodle:
#   print(xtable(data, align = c('l', 'l', 'c')), type = 'html', include.rownames = FALSE)
marcela <- sample(c("David", "Patricia", "Valentina", "Andrés", "Gabriela", "Leonardo", "Daniela", "Felipe", "Isabella", "Paula Andrea", "Natalia", "Lina María", "Consuelo", "Carlos Eduardo", "Samuel", "Luis Fernando"), 1)
# Definir un vector con nombres de estudiantes
num_students <- sample(5:20, 1)
est_con <- num_students-2
nombres_s <- sample(c(
"Alberto", "Juan", "Alejandra", "Camila", "Sebastián", "Lucía", "Miguel", "Sofía", "Diego", "Carla",
"María Antonia", "Violeta", "Martha Lucía", "Manuel Evelio", "Álvaro", "José Álvaro", "Santiago", "Elena",
"Juliana", "Ricardo", "Andrea", "Cristian", "Daniel", "Valeria", "Martín", "Luciana", "Gabriel", "María José",
"Nicolás", "Daniela", "Pedro", "Luisa", "Antonio", "Sara", "Fernanda", "Mariana", "Jorge", "Gonzalo",
"Catalina", "Agustín", "Valentín", "Renata", "Lucas", "Eugenia", "Bautista", "Micaela", "Matías", "Adriana"
), num_students)
##############################################
pepe <- 0
while(pepe == 0) {
nombres_c <- nombres_s[3:length(nombres_s)]
# Definir edades aleatorias para los estudiantes (entre 25 y 55)
edades_al <- sample(25:55, num_students - 2)
tote <- paste(nombres_c, "(", edades_al, ")", sep="")
totem <- paste(edades_al, collapse=" + ")
# Calcular la edad promedio
promedio <- round((sum(edades_al) + 2 * sample(25:55, 1)) / num_students)
# Calcular la suma de las edades conocidas
suma_conocida <- sum(edades_al)
# La suma de las edades de los otros 2 estudiantes es la diferencia entre la suma total y la suma conocida
suma_total <- num_students * promedio
suma_resto <- suma_total - suma_conocida
if(suma_resto %% 2 == 0) {
pepe <- pepe + 1
} else {
pepe <- 0
}
}
#######################
# La edad individual de los otros 2 estudiantes (que es la misma para ambos)
edad_resto <- round(suma_resto / 2)
# Asegurarse de que edad_resto sea mayor o igual a 4
while(edad_resto < 4) {
edades_al <- sample(25:55, num_students - 2)
promedio <- round((sum(edades_al) + 2 * sample(25:55, 1)) / num_students)
suma_conocida <- sum(edades_al)
suma_total <- num_students * promedio
suma_resto <- suma_total - suma_conocida
edad_resto <- round(suma_resto / 2)
}
sol <- c(edad_resto)
library(xtable)
# Suponiendo que tienes dos vectores en R: nombres_s y edades_al
data <- data.frame(
Estudiante = nombres_s,
Edad = c(rep("##ANSWER1##", 2), edades_al)
)
# Imprimir sin nombres de filas y comentario
print(xtable(data, align = c('l', 'l', 'c')), type = 'latex', include.rownames = FALSE, comment = FALSE)
answerlist(rep("", length(sol)), markup = "markdown")
source("~/Escritorio/Promedios/p25_SAI_CFA11S123/SemilleroUnico2.R")
setwd("~/Insync/alvaroangelm@iepedacitodecielo.edu.co/Google Drive/Proyecto-Rexams-2025/r_exams_project/Repositorio_Matematicas_ICFES_PISA/Estadistica/Promedios/p25_SAI_CFA11S123")
setwd("~/Insync/alvaroangelm@iepedacitodecielo.edu.co/Google Drive/Proyecto-Rexams-2025/r_exams_project/Repositorio_Matematicas_ICFES_PISA/Estadistica/Promedios/p25_SAI_CFA11S123")
source("~/Insync/alvaroangelm@iepedacitodecielo.edu.co/Google Drive/Proyecto-Rexams-2025/r_exams_project/Repositorio_Matematicas_ICFES_PISA/Estadistica/Promedios/p25_SAI_CFA11S123/SemilleroUnico2.R")
source("~/Insync/alvaroangelm@iepedacitodecielo.edu.co/Google Drive/Proyecto-Rexams-2025/r_exams_project/Repositorio_Matematicas_ICFES_PISA/Estadistica/Promedios/p25_SAI_CFA11S123/SemilleroUnico2.R")
source("~/Insync/alvaroangelm@iepedacitodecielo.edu.co/Google Drive/Proyecto-Rexams-2025/r_exams_project/Repositorio_Matematicas_ICFES_PISA/Estadistica/Promedios/p25_SAI_CFA11S123/SemilleroUnico2.R")
source("~/Insync/alvaroangelm@iepedacitodecielo.edu.co/Google Drive/Proyecto-Rexams-2025/r_exams_project/Repositorio_Matematicas_ICFES_PISA/Estadistica/Promedios/p25_SAI_CFA11S123/SemilleroUnico2.R")
library(exams)
library(xtable)
# Para salidas exams2pdf:
#   print(xtable(data, align = c('l', 'l', 'c')), type = 'latex', include.rownames = FALSE)
# Para salidas exams2moodle:
#   print(xtable(data, align = c('l', 'l', 'c')), type = 'html', include.rownames = FALSE)
# Para salidas exams2pandoc:
print(
xtable(data,
align = c('l', 'l', 'c'),
digits = c(0, 0, 2)),
type = 'html',
include.rownames = FALSE,
caption = "Tabla de datos generados",
floating = TRUE,
tabular.environment = "table",
hline.after = c(-1, 0),
caption.placement = "top",
table.placement = "!htbp",
sanitize.text.function = identity
)
marcela <- sample(c("David", "Patricia", "Valentina", "Andrés", "Gabriela", "Leonardo", "Daniela", "Felipe", "Isabella", "Paula Andrea", "Natalia", "Lina María", "Consuelo", "Carlos Eduardo", "Samuel", "Luis Fernando"), 1)
# Definir un vector con nombres de estudiantes
num_students <- sample(5:20, 1)
est_con <- num_students-2
nombres_s <- sample(c(
"Alberto", "Juan", "Alejandra", "Camila", "Sebastián", "Lucía", "Miguel", "Sofía", "Diego", "Carla",
"María Antonia", "Violeta", "Martha Lucía", "Manuel Evelio", "Álvaro", "José Álvaro", "Santiago", "Elena",
"Juliana", "Ricardo", "Andrea", "Cristian", "Daniel", "Valeria", "Martín", "Luciana", "Gabriel", "María José",
"Nicolás", "Daniela", "Pedro", "Luisa", "Antonio", "Sara", "Fernanda", "Mariana", "Jorge", "Gonzalo",
"Catalina", "Agustín", "Valentín", "Renata", "Lucas", "Eugenia", "Bautista", "Micaela", "Matías", "Adriana"
), num_students)
pepe <- 0
while(pepe == 0) {
nombres_c <- nombres_s[3:length(nombres_s)]
# Definir edades aleatorias para los estudiantes (entre 25 y 55)
edades_al <- sample(25:55, num_students - 2)
tote <- paste(nombres_c, "(", edades_al, ")", sep="")
totem <- paste(edades_al, collapse=" + ")
# Calcular la edad promedio
promedio <- round((sum(edades_al) + 2 * sample(25:55, 1)) / num_students)
# Calcular la suma de las edades conocidas
suma_conocida <- sum(edades_al)
# La suma de las edades de los otros 2 estudiantes es la diferencia entre la suma total y la suma conocida
suma_total <- num_students * promedio
suma_resto <- suma_total - suma_conocida
if(suma_resto %% 2 == 0) {
pepe <- pepe + 1
} else {
pepe <- 0
}
}
edad_resto <- round(suma_resto / 2)
# Asegurarse de que edad_resto sea mayor o igual a 4
while(edad_resto < 4) {
edades_al <- sample(25:55, num_students - 2)
promedio <- round((sum(edades_al) + 2 * sample(25:55, 1)) / num_students)
suma_conocida <- sum(edades_al)
suma_total <- num_students * promedio
suma_resto <- suma_total - suma_conocida
edad_resto <- round(suma_resto / 2)
}
sol <- c(edad_resto)
library(xtable)
# Suponiendo que tienes dos vectores en R: nombres_s y edades_al
data <- data.frame(
Estudiante = nombres_s,
Edad = c(rep("##ANSWER1##", 2), edades_al)
)
# Imprimir sin nombres de filas y comentario
print(xtable(data, align = c('l', 'l', 'c')), type = 'html', include.rownames = FALSE, comment = FALSE)
answerlist(rep("", length(sol)), markup = "markdown")
source("~/Insync/alvaroangelm@iepedacitodecielo.edu.co/Google Drive/Proyecto-Rexams-2025/r_exams_project/Repositorio_Matematicas_ICFES_PISA/Estadistica/Promedios/p25_SAI_CFA11S123/SemilleroUnico2.R")
setwd("~/Insync/alvaroangelm@iepedacitodecielo.edu.co/Google Drive/Proyecto-Rexams-2025/r_exams_project/Repositorio_Matematicas_ICFES_PISA/Estadistica/Promedios/p25_SAI_CFA11S123")
source("~/Insync/alvaroangelm@iepedacitodecielo.edu.co/Google Drive/Proyecto-Rexams-2025/r_exams_project/Repositorio_Matematicas_ICFES_PISA/Estadistica/Promedios/p25_SAI_CFA11S123/SemilleroUnico.R")
source("~/Insync/alvaroangelm@iepedacitodecielo.edu.co/Google Drive/Proyecto-Rexams-2025/r_exams_project/Repositorio_Matematicas_ICFES_PISA/Estadistica/Promedios/p25_SAI_CFA11S123/SemilleroUnico.R")
